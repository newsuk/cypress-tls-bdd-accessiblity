# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  # slack: circleci/slack@4.1
  lighthouse-check: foo-software/lighthouse-check@0.0.8
# slack-fail-post-step: &slack-fail-post-step
#   context:
#     - tls-production-health-check-context
#   post-steps:
#     - slack/notify:
#         branch_pattern: .+
#         event: fail
#         template: basic_fail_1
#         channel: C03SQRV07R8
        
jobs:
  test: 
    executor: lighthouse-check/default
    steps:
      - lighthouse-check/audit:
          urls: https://www.google.com/
      # - slack/notify:
      #     channel: C03SQRV07R8
          
      - lighthouse-check/validate-status:
          minAccessibilityScore: '50'
          minBestPracticesScore: '50'
          minPerformanceScore: '99'
          minProgressiveWebAppScore: '50'
          minSeoScore: '50'
  
  production-health-check-tests:
    docker:
      - image: cimg/base:2023.08
    steps:
      - checkout
      - run:
          name: Install Node.js
          command: |
            cd ~
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
            sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      # install dependencies
      - run:
          name: Install Dependencies
          command: |
              cd TLS_E2E_Automation 
              npm install
      - run:
          name: Install Cypress 
          command: |
            pwd
            cd TLS_E2E_Automation
            npm add cypress --dev 
            npm add -D cypress-wait-until
      - run:
          name: Run Production Health check tests
          command: |
            pwd
            cd TLS_E2E_Automation
            pwd
            npm run cypress:run-healthcheck
      # - slack/notify:
      #       event: fail
      #       channel: C05PJHA3NTD
      - store_artifacts:
          path: TLS_E2E_Automation/cypress/productionhealthcheckscreenshots
      - store_artifacts:
          path: TLS_E2E_Automation/cypress/videos
      
   
  
  cypress-tests:
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ checksum "package.json" }}
      - run:
          name: Install Node.js
          command: |
            cd ~
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
            sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      # install dependencies
      - run:
          name: install dependencies
          command: |
              cd TLS_E2E_Automation 
              npm install
      - save_cache:
          key: v1-deps-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Install Cypress 
          command: |
            pwd
            cd TLS_E2E_Automation
            npm add cypress --dev
            npm add -D cypress-wait-until
            npm add -D faker 
      - run:
          name: Run Cypress tests
          command: |
            pwd
            cd TLS_E2E_Automation
            pwd
            npx cypress run  --env ENV=dev --spec 'cypress/e2e/PERFORMANCE/Perfromance.cy.js'
      - run:
          name: Creating Dummy Artifacts
          command: |
            echo TLS_E2E_Automation/cypress/screenshots/lhreport.html > /tmp/art-1
             mkdir /tmp/artifacts
      - store_artifacts:
          path: /tmp/art-1
          destination: artifact-file
      - store_artifacts:
          path: TLS_E2E_Automation/cypress/screenshots
              
          
workflows:
  tests:
    jobs:
      - cypress-tests
      - test
      - production-health-check-tests
          
        








